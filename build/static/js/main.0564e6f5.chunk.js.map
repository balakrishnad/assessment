{"version":3,"sources":["redux/rootReducer.js","utils/formioUtils.js","redux/reducers/formioReducer.js","redux/ActionTypes.js","store.js","config.js","containers/Header.js","containers/Navigation.js","components/common/OutsideHandler.js","components/common/Button.js","components/common/SVG.js","components/common/MultiSelectDropdown.js","components/common/Card.js","components/common/CustomLabel.js","components/common/Progress.js","components/common/Tasks.js","pages/Home.js","containers/Form.js","redux/actions/formioActions.js","containers/History.js","containers/ProductInfo.js","containers/Tabs.js","pages/Details.js","pages/Create.js","pages/ExcelToForm.js","pages/Login.js","App.js","serviceWorker.js","index.js","styles/images/pepsico-logo.png"],"names":["history","INGREDIENTS","PACKAGING","FORMS_LIST","initialState","fshaList","FormIOReducer","state","type","payload","formioReducers","reduce","acc","name","combineReducers","form","submission","submissions","createHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","applyMiddleware","createStore","router","connectRouter","auth","forms","query","reducers","PROJECT_URL","API_URL","window","location","search","substr","split","forEach","item","decodeURIComponent","AppConfig","projectUrl","apiUrl","className","style","color","cursor","width","height","viewBox","fill","xmlns","d","src","appLogo","alt","fillRule","withRouter","onClickToggle","onClick","push","pathname","replace","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","aria-haspopup","aria-labelledby","placeholder","aria-describedby","useOnClickOutside","ref","handler","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","caption","variant","ArrowUpIcon","data-name","transform","ArrowDownIcon","rx","BellIcon","TaskIcon","MultiDropdown","options","value","onChange","handleSearch","useState","selectedValue","setSelectedValue","requiredList","getSVT","sVT","length","accum","op","includes","ID","Name","selectedValueText","setSelectedValueText","showDropdownValue","setShowDropdownValue","multiOpt","useRef","addremoveItem","e","checked","valueArray","find","o","filter","autoComplete","readOnly","map","isChecked","key","data","cardData","setCardData","handleOnClick","isHistory","index","status","dueDate","accoladeNumber","productName","stage","complexity","plant","line","title","creation","fsReview","QCPDReview","finalFSHA","tasksData","fshaStatus","date","fontSize","padding","borderBottom","float","i","Icon","dateText","diff","Date","getTime","shdText","Math","floor","h","toFixed","display","flexDirection","textTransform","fontWeight","selectOptions","setData","isFiltered","setIsFiltered","filters","setFilters","toUpperCase","resetData","filteredByText","marginTop","Tasks","marginLeft","label","dummyFn","formName","onSubmit","onSubmitDone","onError","onRender","callback","dispatch","useDispatch","useSelector","selectRoot","fetchState","getForm","err","result","getFormByName","formProps","historyData","fileVersionType","scope","rdOwner","mfgPlant","mfgLine","fsAssessor","qcOwner","processPlatform","fields","f","dummydata","minHeight","forceRenderTabPanel","defaultIndex","ProductInfo","Form","History","setIsHistory","Tabs","s","_id","fetchSubmissionsData","Object","keys","getCreateForm","make_cols","refstr","C","XLSX","utils","decode_range","c","encode_col","ExcelToForm","props","formComponents","commonAttri","textfield","numberField","radioGroup","inline","button","checkbox","select","textArea","password","selectBoxes","cb","setState","isFormCreated","textChanged","text","buttonClick","components","_","camelCase","path","toLowerCase","saveForm","file","cols","handleFile","bind","handleChange","console","log","this","files","reader","FileReader","rABS","readAsBinaryString","onload","bstr","wb","read","bookVBA","wsname","SheetNames","ws","Sheets","sheet_to_json","element","uniqueID","now","labelPosition","values","splitData","splitValues","k","Val","shortcut","json","url","resource","custom","splitSelectBoxData","splitSelectBoxValues","splitRadioButtonsData","splitRadioButtonsValues","trace","readAsArrayBuffer","htmlFor","Component","connect","ownProps","newForm","tags","Login","setUser","flag","toggleFlag","margin","exact","render","authenticated","Home","component","Details","Create","Boolean","hostname","match","Formio","setProjectUrl","setBaseUrl","store","initAuth","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.0564e6f5.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport { auth, form, forms, submission, submissions } from 'react-formio';\n\nimport { FORMS_LIST } from '../utils/formioUtils';\nimport * as reducers from './reducers';\n\nconst formioReducers = FORMS_LIST.reduce((acc, name) => {\n    acc[name] = combineReducers({\n        form: form({ name }),\n        submission: submission({ name }),\n        submissions: submissions({ name }),\n    });\n\n    return acc;\n}, {});\n\nexport default (history) => combineReducers({\n    router: connectRouter(history),\n    auth: auth(),\n    form: form({ name: 'form' }),\n    forms: forms({ name: 'forms', query: { type: 'form' } }),\n    submission: submission({ name: 'submission' }),\n    submissions: submissions({ name: 'submissions' }),\n\n    ...formioReducers,\n\n    // // Reducer for Create FSHA.\n    // createfsha: combineReducers({\n    //     form: form({ name: 'createfsha' }),\n    //     submission: submission({ name: 'createfsha' }),\n    //     submissions: submissions({ name: 'createfsha' }),\n    // }),\n    // // Reducer for Ingredients Assessments.\n    // ingredientsassessments: combineReducers({\n    //     form: form({ name: 'ingredientsassessments' }),\n    //     submission: submission({ name: 'ingredientsassessments' }),\n    //     submissions: submissions({ name: 'ingredientsassessments' }),\n    // }),\n    // // Reducer for Packaging Assessments.\n    // packagingassessments: combineReducers({\n    //     form: form({ name: 'packagingassessments' }),\n    //     submission: submission({ name: 'packagingassessments' }),\n    //     submissions: submissions({ name: 'packagingassessments' }),\n    // }),\n    // // Reducer for Finished Product Assessments.\n    // finishedproductassessments: combineReducers({\n    //     form: form({ name: 'finishedproductassessments' }),\n    //     submission: submission({ name: 'finishedproductassessments' }),\n    //     submissions: submissions({ name: 'finishedproductassessments' }),\n    // }),\n\n    ...reducers,\n})\n","// Utility functions and constants for formio implementation...\nimport { selectRoot } from 'react-formio';\n\nexport const FORM = 'form';\nexport const SUBMISSIONS = 'submissions';\nexport const CREATE_FSHA = 'createfsha';\nexport const INGREDIENTS = 'ingredientsassessments';\nexport const PACKAGING = 'packagingassessments';\nexport const FINISHED_PRODUCT = 'finishedproductassessments';\n\nexport const FORMS_LIST = [\n    CREATE_FSHA,\n    INGREDIENTS,\n    PACKAGING,\n    FINISHED_PRODUCT,\n];\n\nexport const fetchState = (state, formName) => {\n    return selectRoot(FORM, selectRoot(formName, state));\n};\n\nexport const fetchSubmissionsData = (state, formName) => {\n    const { submissions } = selectRoot(SUBMISSIONS, selectRoot(formName, state));\n\n    return submissions.map(s => ({ ...s.data, _id: s._id }));\n};\n\nexport const fetchSubmissions = (state, formName) => {\n    const { submissions } = selectRoot(SUBMISSIONS, selectRoot(formName, state));\n\n    return submissions;\n};\n","import * as ActionTypes from '../ActionTypes';\n\nconst initialState = {\n    fshaList: [],\n};\n\nexport const FormIOReducer = (state = initialState, { type, payload, ...rest }) => {\n    switch (type) {\n        case ActionTypes.FETCH_FSHA_LIST:\n            return {\n                ...state,\n                fshaList: payload,\n            };\n\n        default:\n            return {\n                ...state\n            };\n    }\n}\n","export const FETCH_FSHA_LIST = 'FETCH_FSHA_LIST';","import { createStore, applyMiddleware, compose } from 'redux'\nimport { routerMiddleware } from 'connected-react-router'\nimport thunk from 'redux-thunk'\nimport { createHashHistory as createHistory } from 'history'\nimport rootReducer from './redux/rootReducer'\n\nexport const history = createHistory()\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [thunk, routerMiddleware(history)]\n\nif (process.env.NODE_ENV === 'development') {\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n    if (typeof devToolsExtension === 'function') {\n        enhancers.push(devToolsExtension())\n    }\n}\n\nconst composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n)\n\nexport default createStore(\n    rootReducer(history),\n    initialState,\n    composedEnhancers\n)\n","let PROJECT_URL = 'https://bczrqfsivlgdiqk.form.io';\nlet API_URL = 'https://api.form.io';\n\nconst query = {};\nwindow.location.search.substr(1).split('&').forEach(function(item) {\n  query[item.split('=')[0]] = item.split('=')[1] && decodeURIComponent(item.split('=')[1]);\n});\n\nPROJECT_URL = query.projectUrl || PROJECT_URL;\nAPI_URL = query.apiUrl || API_URL;\n\nexport const AppConfig = {\n  projectUrl: PROJECT_URL,\n  apiUrl: API_URL\n};\n\nexport const AuthConfig = {\n  anonState: '/auth',\n  authState: '/',\n  login: {\n    form: 'user/login'\n  },\n  register: {\n    form: 'user/register'\n  }\n};\n","import React from 'react';\nimport \"./Header.css\"\nimport appLogo from '../styles/images/pepsico-logo.png'\n\n\nexport default () => {\n    return (\n        <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n            <div className=\"d-flex align-items-center justify-content-center\" style={{ color: \"#fff\",cursor:\"pointer\" }}>\n                <svg className=\"bi bi-grid-3x3-gap-fill\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M1 2a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V2zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1V2zM1 7a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V7zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V7zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1V7zM1 12a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1v-2zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1v-2zm5 0a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-2z\"></path>\n                </svg>\n            </div>\n\n            <span className=\"fsha-header-logo\">\n                <img src={appLogo} alt=\"Pepsico Logo\" />\n            </span>\n            <span className=\"fsha-header-title mr-auto\">\n                FOOD SAFETY HAZARD ASSESSMENT\n            </span>\n            <span>\n                <svg className=\"bi bi-person-circle\" width=\"2em\" height=\"2em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M13.468 12.37C12.758 11.226 11.195 10 8 10s-4.757 1.225-5.468 2.37A6.987 6.987 0 0 0 8 15a6.987 6.987 0 0 0 5.468-2.63z\" />\n                    {/* <path fill-rule=\"evenodd\" d=\"M8 9a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\" />\n                    <path fill-rule=\"evenodd\" d=\"M8 1a7 7 0 1 0 0 14A7 7 0 0 0 8 1zM0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8z\" /> */}\n               \n                    <path fillRule=\"evenodd\" d=\"M8 9a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\" />\n                    <path fillRule=\"evenodd\" d=\"M8 1a7 7 0 1 0 0 14A7 7 0 0 0 8 1zM0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8z\" />\n                </svg>\n            </span>\n            {/*<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item active\">\n                        <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#\">Link</a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdown01\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</a>\n                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdown01\">\n                            <a className=\"dropdown-item\" href=\"#\">Action</a>\n                            <a className=\"dropdown-item\" href=\"#\">Another action</a>\n                            <a className=\"dropdown-item\" href=\"#\">Something else here</a>\n                        </div>\n                    </li>\n                </ul>\n            </div> */}\n        </nav>\n    );\n};\n","import React from 'react';\nimport \"./Navigation.css\"\nimport { withRouter } from 'react-router';\n\nexport default withRouter(({ history, location, onClickToggle }) => {\n\n    const onClick = (type) => {\n        if (type === 'create') {\n            history.push('/create');\n        } else {\n            if (history.location.pathname === '/') {\n                history.replace({\n                    pathname: '/',\n                    state: { type }\n                });\n            } else {\n                history.push({\n                    pathname: '/',\n                    state: { type }\n                });\n            }\n        }\n    };\n\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fsha-nav\">\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbars\" aria-controls=\"navbarsExample05\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbars\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item active\">\n                        <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdownMenu\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">FSHA's</a>\n                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu\">\n                            <a className=\"dropdown-item\" onClick={() => onClick('create')}>Create New</a>\n                            <a className=\"dropdown-item\" onClick={() => onClick('draft')}>Drafts</a>\n                            <a className=\"dropdown-item\" onClick={() => onClick('pending')}>Pending</a>\n                            <a className=\"dropdown-item\" onClick={() => onClick('approved')}>Approved</a>\n                            <a className=\"dropdown-item\" onClick={() => onClick('archive')}>Archive</a>\n                        </div>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#\" onClick={onClickToggle}>Task / Notifications</a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#\">\n                            <div className=\"input-group search\">\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Search FSHAs\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\" />\n                                <span className=\"input-group-append\">\n                                    <svg className=\"bi bi-search\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"#686868\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        {/* <path fill-rule=\"evenodd\" d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\" />\n                                        <path fill-rule=\"evenodd\" d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\" /> */}\n\n                                        <path fillRule=\"evenodd\" d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\" />\n                                        <path fillRule=\"evenodd\" d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\" />\n                                    </svg>\n                                </span>\n                            </div>\n                        </a>\n                    </li>\n\n                </ul>\n\n            </div>\n        </nav>\n    );\n});\n","import React, { useEffect } from 'react';\n\nfunction useOnClickOutside(ref, handler) {\n    useEffect(() => {\n        const listener = event => {\n          // Do nothing if clicking ref's element or descendent elements\n          if (!ref.current || ref.current.contains(event.target)) {\n            return;\n          }\n          handler(event);\n        };\n  \n        document.addEventListener('mousedown', listener);\n        document.addEventListener('touchstart', listener);\n  \n        return () => {\n          document.removeEventListener('mousedown', listener);\n          document.removeEventListener('touchstart', listener);\n        };\n      },\n      [ref, handler]\n    );\n}\nexport default useOnClickOutside;","import React from 'react';\nimport './Button.css'\n\nexport default ({\n    onClick,\n    caption,\n    variant,\n    className = ''\n}) => {\n    return (\n        <button className={`${className} ${variant} noOutline`} onClick={onClick}>\n            <span>{caption}</span>\n        </button>\n    );\n}\n","import React from 'react';\n\nconst ArrowUpIcon = ({ className }) => (\n    <svg className={className}\n        xmlns=\"http://www.w3.org/2000/svg\" width=\"17.78\" height=\"9.844\" viewBox=\"0 0 17.78 9.844\">\n        <path id=\"Union_6\" data-name=\"Union 6\" d=\"M8.566.695.695,8.567a.983.983,0,0,0,1.389,1.39l7.21-7.211,7.215,7.216A.983.983,0,1,0,17.9,8.573L10.027.7A1.062,1.062,0,0,0,8.566.695Z\" transform=\"translate(-0.407 -0.406)\" fill=\"#28bef0\" />\n    </svg>\n);\nconst ArrowDownIcon = ({ className }) => (\n    <svg className={className}\n        xmlns=\"http://www.w3.org/2000/svg\" width=\"18.593\" height=\"10.656\" viewBox=\"0 0 18.593 10.656\">\n        <g id=\"Group_4936\" data-name=\"Group 4936\" transform=\"translate(-201.761 -439.604) rotate(45)\">\n            <rect id=\"Rectangle_25\" data-name=\"Rectangle 25\" width=\"13.097\" height=\"1.965\" rx=\"0.982\" transform=\"translate(454.5 167.202)\" fill=\"#D1D1D1\" />\n            <rect id=\"Rectangle_26\" data-name=\"Rectangle 26\" width=\"13.097\" height=\"1.965\" rx=\"0.982\" transform=\"translate(465.679 169.112) rotate(-90)\" fill=\"#D1D1D1\" />\n        </g>\n    </svg>\n);\n\nconst BellIcon = ({ className }) => (\n    <svg style={{ fill: '#6f6f6f' }} className={className}\n        xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"17\" viewBox=\"0 0 24.143 26\">\n        <path id=\"Path_10244\" data-name=\"Path 10244\"\n            d=\"M13.232,2.321A.229.229,0,0,1,13,2.554,2.557,2.557,0,0,1,10.446,0a.229.229,0,0,1,.232-.232A.229.229,0,0,1,10.911,0,2.1,2.1,0,0,0,13,2.089.229.229,0,0,1,13.232,2.321ZM3.569-1.857c2.6-2.931,3.859-6.906,3.859-12.071,0-1.872,1.77-4.643,5.571-4.643s5.571,2.771,5.571,4.643c0,5.165,1.262,9.141,3.859,12.071Zm21.5,0c-2.147-1.814-4.643-5.064-4.643-12.071a6.863,6.863,0,0,0-6.152-6.4,1.46,1.46,0,0,0,.116-.566A1.393,1.393,0,0,0,13-22.286a1.393,1.393,0,0,0-1.393,1.393,1.46,1.46,0,0,0,.116.566,6.863,6.863,0,0,0-6.152,6.4c0,7.008-2.5,10.258-4.643,12.071A1.87,1.87,0,0,0,2.786,0h6.5A3.721,3.721,0,0,0,13,3.714,3.721,3.721,0,0,0,16.714,0h6.5A1.87,1.87,0,0,0,25.071-1.857Z\"\n            transform=\"translate(-0.929 22.286)\" />\n    </svg>\n);\n\nconst TaskIcon = ({ className }) => (\n    <svg style={{ fill: '#6f6f6f' }} className={className}\n        xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"17\" viewBox=\"0 0 24 24\">\n        <path d=\"M9,15h3.81l8.7-8.69a2.7,2.7,0,0,0,0-3.82,2.77,2.77,0,0,0-3.82,0L9,11.19Zm2-3,8.11-8.1a.69.69,0,0,1,1,0h0a.68.68,0,0,1,0,1L12,13H11Z\" />\n        <path d=\"M20,19.07a.93.93,0,0,1-.93.93H4.93A.93.93,0,0,1,4,19.07V4.93A.93.93,0,0,1,4.93,4H15V2H4.93A2.93,2.93,0,0,0,2,4.93V19.07A2.93,2.93,0,0,0,4.93,22H19.07A2.93,2.93,0,0,0,22,19.07V10H20Z\" />\n    </svg>\n);\n\nexport { ArrowUpIcon, ArrowDownIcon, BellIcon, TaskIcon };","import React, { useState, useRef, useEffect } from 'react';\nimport './MultiSelectDropdown.css';\nimport useOnClickOutside from './OutsideHandler';\nimport Button from './Button';\nimport { ArrowUpIcon, ArrowDownIcon } from './SVG';\n\nconst MultiDropdown = ({ options,\n    value = [],\n    onChange = () => { },\n    handleSearch = () => { },\n    style\n}) => {\n    const [selectedValue, setSelectedValue] = useState(value);\n    const [requiredList, setRequiredList] = useState(options);\n    const getSVT = (value) => {\n        let sVT = [];\n        if (value && value.length && options && options.length) {\n            sVT = options && options.reduce((accum, op) => {\n                if (value.includes(op.ID)) {\n                    accum.push(op.Name);\n                }\n                return accum;\n            }, [])\n        }\n\n        return sVT;\n    };\n    const [selectedValueText, setSelectedValueText] = useState(getSVT(value));\n    const [showDropdownValue, setShowDropdownValue] = useState(false);\n    const multiOpt = useRef();\n    const handleClick = () => {\n        setShowDropdownValue(!showDropdownValue);\n    }\n    useOnClickOutside(multiOpt, () => setShowDropdownValue(false));\n\n    useEffect(() => {\n        setSelectedValue(value);\n        setSelectedValueText(getSVT(value));\n    }, [value]);\n\n    const addremoveItem = (e, id) => {\n        if (e.target.checked) {\n            setSelectedValue(() => {\n                const valueArray = [...selectedValue, id];\n                setSelectedValueText([...selectedValueText, options.find(o => o.ID === id).Name]);\n                onChange(valueArray);\n                return valueArray;\n            });\n        } else {\n            setSelectedValue(() => {\n                const valueArray = [...(selectedValue.filter(value => value !== id))];\n                setSelectedValueText(options.reduce((accum, { ID, Name }) => {\n                    if (valueArray.includes(ID)) {\n                        accum.push(Name);\n                    }\n                    return accum;\n                }, []))\n                onChange(valueArray);\n                return valueArray;\n            });\n        }\n    };\n\n    return (\n        <div className=\"MA_Dropdown\" ref={multiOpt} style={style}>\n            <label className=\"MA_FieldLabel\"></label>\n            <div className=\"MA_DropdownText\" onClick={handleClick}>\n                <input type=\"text\"\n                    name=\"droptxt\"\n                    placeholder=\"Filter\"\n                    value={selectedValueText}\n                    autoComplete=\"false\"\n                    readOnly\n                /> {showDropdownValue\n                    ? <span><ArrowUpIcon /></span>\n                    : <span><ArrowDownIcon /></span>}\n            </div>\n            {showDropdownValue ? <div className=\"MA_DropdownOption_container\">\n                <ul className=\"MA_DropdownOptionsList\">\n\n                    {requiredList && requiredList.map(({ ID, Name }) => {\n                        const isChecked = selectedValue.includes(ID);\n\n                        return (\n                            <li\n                                // style={{ margin: '5px' }} \n                                key={ID}\n                                className=\"MA_DropdownOption\"\n                            >\n                                <label className=\"MA_CheckOptionContainer\">\n                                    <input type=\"checkbox\"\n                                        checked={isChecked} onChange={e => addremoveItem(e, ID)} />\n                                    {Name}\n                                    <span className=\"checkmark\"></span>\n                                </label>\n                            </li>\n\n                        );\n                    })}\n                    <div className=\"selectbtnGroup\">\n                        <Button caption=\"Show Results\" variant={'showResults'}\n                            onClick={() => handleSearch(selectedValue)}\n                        />\n                        <Button caption=\"Clear Filters\" variant={'clearFilters'}\n                            onClick={() => {\n                                setSelectedValue('');\n                                setSelectedValueText('');\n                                handleSearch(null);\n                            }}\n                        />\n                    </div>\n                </ul>\n            </div>\n                : null}\n        </div>\n    );\n}\nexport default MultiDropdown;","import React, { useState, useEffect, Fragment } from 'react';\n\nimport Button from \"./Button\";\nimport \"./Card.css\";\nimport { withRouter } from 'react-router';\n\nexport default withRouter(({ data, history }) => {\n    const [cardData, setCardData] = useState(data);\n\n    useEffect(() => {\n        setCardData(data);\n    }, [data]);\n\n    const handleOnClick = (type) => {\n        history.push({\n            pathname: '/details',\n            state: { isHistory: type === 'history' }\n        });\n    };\n\n    return (\n        <div className=\"card-wrpper\">\n            {\n                cardData.length > 0\n                    ? <Fragment>\n                        {cardData.map((data, index) => {\n                            return (\n                                <div className=\"col-md-4 individual-card\" key={`card-${index}`}>\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <p className=\"status col-md-6 bold\">{data.status}</p>\n                                            <p className=\"dueDate col-md-6\"> DUE DATE : {data.dueDate}</p>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <p className=\"accoladeNum col-md-12\" style={{ \"marginBottom\": 0 }}> ACCOLADE #{data.accoladeNumber}</p>\n                                            <p className=\"productName col-md-12 bold\">{data.productName}</p>\n                                            <p className=\"stage col-md-6\">STAGE<br /> <span>{data.stage}</span></p>\n                                            <p className=\"complexity col-md-6\">COMPLEXITY <br /><span>{data.complexity}</span></p>\n                                            <p className=\"plant col-md-6\">MFG PLANT <br /> <span>{data.plant}</span></p>\n                                            <p className=\"line col-md-6\">MFG LINE <br /> <span>{data.line}</span></p>\n                                            <hr style={{ \"width\": \"100%\", \"background\": \"#e0e0e0\" }} />\n                                            <div className=\"btnGroup\">\n                                                <Button onClick={() => handleOnClick('history')} className=\"col-md-6\" variant=\"history\" caption=\"History\" />\n                                                <Button onClick={() => handleOnClick('details')} className=\"col-md-5\" variant=\"details\" caption=\"Details\" />\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        })}\n                    </Fragment>\n                    : <Fragment>\n                        No Records available.\n                    </Fragment>\n            }\n        </div>\n    );\n});\n","import React from 'react';\nimport './CustomLabel.css';\n\nexport default ({ title, value, style, className = '' }) => {\n    return (\n        <div className={`custom-label-wrapper ${className}`}>\n            <div className=\"custom-label-title\">{title}</div>\n            <div title={value}\n                className={\"custom-label-value custom-label-value-ellipsis\"}\n            >\n                {value}\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport './Progress.css';\n\nexport default ({ creation, fsReview, QCPDReview, finalFSHA }) => {\n    return (\n        <div>\n            <div className=\"labelWrapper\">\n                <div className=\"col-md-3 offset-md-1\">\n                    <div className=\"label\">Creation</div>\n                </div>\n                <div className=\"col-md-3\">\n                    <div className=\"label\">FS Review</div>\n                </div>\n                <div className=\"col-md-3\">\n                    <div className=\"label QCReview\">QC/PD Review</div>\n                </div>\n                <div className=\"col-md-2\">\n                    <div className=\"label finalFSHAHTD\">Final FSHA, HTD</div>\n                </div>\n            </div>\n\n            <div className=\"progressBar\">\n                <div className=\"col-md-3 offset-md-1\">\n                    <div className={`circle ${creation ? \"creation\" : \"\"}`} ><span></span></div>\n                    <p></p>\n                    <div className=\"date\">DUE: 3/22/19</div>\n                </div>\n                <div className=\"col-md-3\">\n                    <div className={`circle ${fsReview ? \"fsReview\" : \"\"}`}><span></span></div>\n                    <p></p>\n                    <div className=\"date\">DUE: 3/23/19</div>\n                </div>\n                <div className=\"col-md-3\">\n                    <div className={`circle ${QCPDReview ? \"QCPDReview\" : \"\"}`}><span></span></div>\n                    <p></p>\n                    <div className=\"date\">DUE: 3/24/19</div>\n                </div>\n                <div className=\"col-md-2\">\n                    <div className={`circle ${finalFSHA ? \"finalFSHA\" : \"\"}`}><span></span></div>\n                    <div className=\"date\" style={{ \"clear\": \"both\" }}>DUE: 3/25/19</div>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import React, { Fragment } from 'react';\nimport './Task.css'\n\nimport { BellIcon, TaskIcon, ArrowDownIcon } from './SVG';\n\nconst tasksData = [\n    { accoladeNumber: 56746, productName: 'Lays UCL 2019', fshaStatus: 'Assessment Complete', type: 'notification', date: '07/01/2020 18:20' },\n    { accoladeNumber: 56746, productName: 'Lays UCL 2019', fshaStatus: 'Assessment Submission', type: 'task', date: '07/01/2020' },\n    { accoladeNumber: 47830, productName: 'Simba Sodium Reduction', fshaStatus: 'Assessment Submission', type: 'task', date: '07/01/2020' },\n    { accoladeNumber: 47830, productName: 'Simba Sodium Reduction', fshaStatus: 'Assessment Submitted', type: 'notification', date: '06/29/2020 15:10' },\n    { accoladeNumber: 52204, productName: 'Lays Red Caviar', fshaStatus: 'Assessment Submission', type: 'task', date: '07/01/2020' },\n    { accoladeNumber: 52920, productName: 'Oven Baked Thins Salted Flavour', fshaStatus: 'Assessment Submitted', type: 'notification', date: '06/28/2020 15:10' },\n];\n\nexport default () => {\n    return (\n        <Fragment>\n            <div style={{\n                fontSize: '14px', color: 'rgb(111, 111, 111)', padding: '1rem 0.3rem 0.5rem',\n                borderBottom: '1px solid #a7a7a7', // marginBottom: '0.8rem'\n            }}>\n                <span>All Tasks and Notifications</span>\n                <span style={{ float: 'right' }}><ArrowDownIcon /></span>\n            </div>\n            {\n                tasksData.map(({ accoladeNumber, productName, fshaStatus, type, date }, i) => {\n                    let Icon = null;\n                    let dateText = '';\n\n                    if (type === 'task') {\n                        Icon = <TaskIcon />;\n                        dateText = `Due ${date}`;\n                    } else {\n                        Icon = <BellIcon />;\n                        const todayDate = (new Date()).getTime();\n                        const nDate = (new Date(date)).getTime();\n                        let diff = (todayDate - nDate) / (1000 * 3600);\n                        let shdText = 'hour(s)';\n\n                        if (diff > 24) {\n                            diff = diff / 24;\n                            shdText = 'day(s)';\n                        } else if (diff < 1) {\n                            diff = Math.floor(diff * 60);\n                            shdText = 'minute(s)';\n\n                            debugger;\n                        }\n\n                        const h = diff.toFixed(0);\n                        dateText = `${h} ${shdText} ago`;\n                    }\n                    return (\n                        <div key={`task-${i}`} className=\"eachRow row\">\n                            <div className=\"col-md-1\" style={{ padding: '0' }}>\n                                {Icon}\n                            </div>\n                            <div className=\"col-md-4\">\n                                <span style={{ fontSize: '12px', color: '#a7a7a7' }}>\n                                    {dateText}\n                                </span>\n                            </div>\n                            <div className=\"col-md-7\" style={{ display: 'flex', flexDirection: 'column', padding: '0' }}>\n                                <span style={{ textTransform: 'uppercase', fontWeight: 'bolder', color: '#6f6f6f', fontSize: '10px' }}>\n                                    Accolade # {accoladeNumber}\n                                </span>\n                                <span style={{ fontWeight: 'bolder', color: '#6f6f6f', fontSize: '17px' }}>\n                                    {productName}\n                                </span>\n                                <span style={{ fontSize: '12px', color: '#a7a7a7' }}>\n                                    {fshaStatus}\n                                </span>\n                            </div>\n                        </div>\n                    )\n                })\n            }\n        </Fragment>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport MultiDropdown from '../components/common/MultiSelectDropdown'\nimport { Card, Button } from '../components';\nimport { withRouter } from 'react-router';\nimport '../components/common/Task.css';\nimport Tasks from '../components/common/Tasks';\nconst cardData = [\n    { status: \"PENDING\", dueDate: \"3/23/19\", accoladeNumber: 47830, productName: \"Simba Sodium Reduction\", stage: \"Functional Approval\", complexity: \"Medium\", plant: \"Magic Seribia\", line: \"Backed Line 1\" },\n    { status: \"DRAFT\", dueDate: \"3/23/19\", accoladeNumber: 13789, productName: \"Lays Red Caviar\", stage: \"Functional Approval\", complexity: \"Medium\", plant: \"Magic Seribia\", line: \"Backed Line 1\" },\n    { status: \"APPROVED\", dueDate: \"3/23/19\", accoladeNumber: 76278, productName: \"Oven Baked Thins\", stage: \"Functional Approval\", complexity: \"Medium\", plant: \"Magic Seribia\", line: \"Backed Line 1\" },\n    { status: \"REJECTED\", dueDate: \"3/23/19\", accoladeNumber: 98273, productName: \"Simba Sodium Reduction\", stage: \"Functional Approval\", complexity: \"Medium\", plant: \"Magic Seribia\", line: \"Backed Line 1\" },\n    { status: \"DRAFT\", dueDate: \"3/23/19\", accoladeNumber: 76711, productName: \"Oven Baked Thins Salted Flavor\", stage: \"Functional Approval\", complexity: \"Medium\", plant: \"Magic Seribia\", line: \"Backed Line 1\" },\n    { status: \"APPROVED\", dueDate: \"3/23/19\", accoladeNumber: 25181, productName: \"Simba Sodium Reduction\", stage: \"Functional Approval\", complexity: \"Medium\", plant: \"Magic Seribia\", line: \"Backed Line 1\" }\n];\n\nconst selectOptions = [\n    { ID: \"DRAFT\", Name: \"Drafts\" },\n    { ID: \"PENDING\", Name: \"Pending\" },\n    { ID: \"APPROVED\", Name: \"Approved\" },\n    { ID: \"REJECTED\", Name: \"Rejected\" },\n    { ID: \"ARCHIVED\", Name: \"Archived\" }\n];\n\nexport default withRouter(({ history, location }) => {\n\n    const [data, setData] = useState(cardData);\n    const [isFiltered, setIsFiltered] = useState(false);\n    const [filters, setFilters] = useState([]);\n\n    useEffect(() => {\n        if (location.state) {\n            const type = location.state.type.toUpperCase();\n\n            setData(cardData.filter(d => d.status === type));\n            setIsFiltered(true);\n            setFilters([type]);\n        }\n    }, [location.state]);\n\n    // const handleMultiChange = (value) => {\n    //     let selectedValue = value;\n    //     console.log(selectedValue);\n    // };\n\n    const handleSearch = (filters) => {\n        if (filters) {\n            setData(cardData.filter(d => filters.includes(d.status)));\n            setIsFiltered(true);\n            setFilters(filters);\n        } else {\n            resetData();\n        }\n    };\n\n    const resetData = () => {\n        setData(cardData);\n        setIsFiltered(false);\n        setFilters([]);\n    };\n\n    let filteredByText = '';\n\n    selectOptions.forEach(o => {\n        if (filters.includes(o.ID))\n            filteredByText += o.Name + ', ';\n    });\n\n    return (\n        <div style={{ marginTop: '2rem' }} className=\"home\">\n            <div className=\"col-md-3 taskNotificationWrapper\">\n                <Tasks />\n            </div>\n\n            <div style={{ marginTop: '2rem' }} >\n                <div className=\"row\">\n                    <div className=\"col-md-2\" style={{ marginLeft: '1rem' }}>\n                        <h2><b style={{ fontWeight: '600' }}>Dashboard</b></h2>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <MultiDropdown\n                            label={'\\u00A0'}\n                            value={filters}\n                            // onChange={e => handleMultiChange(e)}\n                            handleSearch={handleSearch}\n                            options={selectOptions}\n                            placeholder=\"Filter\"\n                            style={{ marginTop: '-1.2rem' }}\n                        />\n                    </div>\n                    <div className=\"col-md-3\">\n                        <Button variant=\"assessment\" caption={'New Assessment'}\n                            onClick={() => {\n                                history.push('/create');\n                            }}\n                        />\n                    </div>\n                </div>\n\n                {isFiltered && <div style={{ marginLeft: '1rem' }}>\n                    {/* Filtered By:  {selectOptions.map(o => filters.includes(o.ID))} */}\n                    Filtered by:  {filteredByText.substr(0, filteredByText.length - 2)}\n                    <Button onClick={resetData} className=\"col-md-2\" variant=\"history\" caption=\"Clear Filters\" />\n                </div>}\n\n                <Card data={data} />\n            </div >\n        </div>\n    )\n});","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form } from 'react-formio';\n\nimport { getFormByName } from '../redux/actions/formioActions';\nimport { fetchState } from '../utils/formioUtils';\n\nconst dummyFn = () => { };\n\nexport default ({\n    formName,\n    onSubmit = dummyFn,\n    onSubmitDone = dummyFn,\n    onChange = dummyFn,\n    onError = dummyFn,\n    onRender = dummyFn,\n    callback = dummyFn,\n}) => {\n    const dispatch = useDispatch();\n    const { form } = useSelector(state => fetchState(state, formName));\n\n    useEffect(() => {\n        dispatch(getFormByName(formName, callback));\n    }, [formName]);\n\n    const formProps = {\n        onSubmit,\n        onSubmitDone,\n        onChange,\n        onError,\n        onRender,\n    };\n\n    return (<Form form={form} {...formProps} />);\n};\n","import { getSubmissions, getForm } from 'react-formio';\nimport { FETCH_FSHA_LIST } from '../ActionTypes';\n\nexport const getFSHAList = (page = 1, query = { limit: 999999 }, callback = () => { }) => dispatch => {\n    dispatch(getSubmissions('createfsha', page, query));\n    \n    // dispatch(getSubmissions('createfsha', page, query, (err, result) => {\n    //     if (err || !result) {\n    //         return callback(err);\n    //     }\n\n    //     debugger;\n    //     dispatch({\n    //         type: FETCH_FSHA_LIST,\n    //         payload: result\n    //     })\n\n    //     return callback(null, result);\n    // }));\n};\n\nexport const fetchSubmissionsByName = (formName, page = 1, query = { limit: 999999 }) => dispatch => {\n    dispatch(getSubmissions(formName, page, query));\n}\n\nexport const getCreateForm = (callback = () => { }) => dispatch => {\n    dispatch(getForm('createfsha', null, (err, result) => {\n        if (err || !result) {\n            return callback(err);\n        }\n\n        return callback(null, result);\n    }));\n};\n\nexport const getFormByName = (formName, callback = () => { }) => dispatch => {\n    dispatch(getForm(formName, null, (err, result) => {\n        if (err || !result) {\n            return callback(err);\n        }\n\n        return callback(null, result);\n    }));\n};\n","import React from 'react';\n\nconst historyData = [\n    { fileVersionType: 'Input Form Submitted (v1)' },\n    { fileVersionType: 'FSHA + HTD Draft 1 (Automated content)' },\n    { fileVersionType: 'FSHA + HTD Draft 2 (FS Approved)' },\n    { fileVersionType: 'or FSHA + HTD Draft 2 (FS edits + Approved)' },\n    { fileVersionType: 'or FSHA + HTD Draft 2 (FS comments + Reject)' },\n    { fileVersionType: 'FSHA + HTD (Fully Approved)' },\n    { fileVersionType: 'or FSHA + HTD Draft 2 (FS edits + Approved)' },\n    { fileVersionType: 'or Input Form submitted (v2) if rejected' },\n];\n\nexport default () => {\n    return (\n        <table className=\"table\" style={{ width: '90%', marginLeft: '1rem' }}>\n            <thead>\n                <tr>\n                    <th scope=\"col\">File Version Type</th>\n                    <th scope=\"col\">Date Created</th>\n                    <th scope=\"col\">Date Submitted</th>\n                    <th scope=\"col\">Date Approved/Rejected</th>\n                    <th scope=\"col\">Date Archived</th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    historyData.map((h, i) => (\n                        <tr key={`tr-${i}`}>\n                            <td>{h.fileVersionType}</td>\n                            <td>{'MM/DD/YYYY'}</td>\n                            <td>{'MM/DD/YYYY'}</td>\n                            <td>{'MM/DD/YYYY'}</td>\n                            <td>{'MM/DD/YYYY'}</td>\n                        </tr>\n                    ))\n                }\n            </tbody>\n        </table>\n    )\n}","import React from 'react';\nimport { CustomLabel } from '../components';\n\nexport default ({\n    stage = 3,\n    rdOwner = 'Alexa Richardson',\n    mfgPlant = 'Leycroft Road, UK',\n    mfgLine = 'CKF Line',\n    fsAssessor = 'Helen Booden Fedor Kholodov',\n    qcOwner = 'James Dougherty',\n    processPlatform = 'Fried PC - Full fat flat'\n}) => {\n\n    const fields = [\n        { title: 'Stage', value: stage },\n        { title: 'R&D Owner', value: rdOwner },\n        { title: 'MFG Plant', value: mfgPlant },\n        { title: 'MFG line', value: mfgLine },\n        { title: 'FS Assessor(s)', value: fsAssessor },\n        { title: 'QC owner', value: qcOwner },\n        { title: 'Process platform', value: processPlatform },\n    ];\n\n    return (\n        <div className=\"row\">\n            {fields.map((f, i) => (\n                <div key={`cl-${i}`} className=\"col-md-5\">\n                    <CustomLabel title={f.title} value={f.value} />\n                </div>\n            ))}\n        </div>\n    )\n}","import React, { useEffect } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport './ProductDetailPage.css'\nimport { Progress } from '../components';\nimport { ProductInfo, History } from '.';\nimport Form from './Form';\nimport { INGREDIENTS, PACKAGING, FINISHED_PRODUCT } from '../utils/formioUtils';\n\nexport default ({ isHistory }) => {\n    useEffect(() => {\n        if (isHistory) {\n\n        }\n    }, [isHistory]);\n\n    const dummydata = { accolade: \"59378\", productName: \"Lays UCL 2019\", modifiedDate: \"3/22/19\" }\n\n    return (\n        <div className=\"productDetails\">\n            <div className=\"productInfo\">\n                <div className=\"col-md-6\">\n                    <p style={{ \"color\": \"#b7b7b7\" }}>Accolade # <b style={{ \"color\": \"#b9b9b9\" }}>{dummydata.accolade}</b></p>\n                    <p className=\"productName\" style={{ minHeight: '1rem' }}>\n                        <b style={{ \"color\": \"#4e4e4e\" }}>{dummydata.productName}</b>\n                        <a href=\"#/create\" className=\"edit\">Edit</a>\n                    </p>\n                </div>\n                <div className=\"col-md-6 modifiedDate\">\n                    <div style={{ \"color\": \"#8c8c8c\", \"fontSize\": \"14px\", \"float\": \"right\" }}>LAST MODIFIED\n                        <br />\n                        <p style={{ \"textAlign\": \"center\", \"color\": \"#848484\" }}>\n                            <b>{dummydata.modifiedDate}</b>\n                        </p>\n                    </div>\n                </div>\n            </div>\n            <div className=\"tabWrapper\">\n                <Tabs forceRenderTabPanel defaultIndex={(isHistory ? 2 : 0)} >\n                    <TabList>\n                        <Tab>Overview</Tab>\n                        <Tab>Assessments</Tab>\n                        <Tab>History</Tab>\n                    </TabList>\n                    <TabPanel >\n                        <div className=\"tab-content\">\n                            <Progress creation={true} fsReview={true} QCPDReview={false} finalFSHA={false} />\n                            <div className=\"productDetailsWrapper\">\n                                <div className=\"col-md-6\">\n                                    <p><b>PROJECT DESCRIPTION:</b></p>\n                                    <p className=\"description\">New seasoning development for Lays Potato Chips, 5 new seasonings to be developed for existing PC base. No change in base recipe, base materials, packaging, process.</p>\n                                </div>\n\n                                <div className=\"productInfo col-md-6\">\n                                    <ProductInfo />\n                                </div>\n                            </div>\n                        </div>\n                    </TabPanel>\n                    <TabPanel>\n                        <Tabs forceRenderTabPanel>\n                            <TabList className=\"sub-heading-tabs\">\n                                <Tab>Ingredients <br />Assessment</Tab>\n                                <Tab>Allergen <br />Assessment</Tab>\n                                <Tab>Packaging Materials<br /> Assessment</Tab>\n                                <Tab>Process Flow <br />Assessment</Tab>\n                                <Tab>Finished Product <br />Assessment</Tab>\n                            </TabList>\n                            <TabPanel>\n                                <div className=\"tab-content\">\n                                    <h4>Ingredients Assessment</h4>   \n                                    <Form formName={INGREDIENTS} />\n                                </div>\n                            </TabPanel>\n                            <TabPanel>\n                                <div className=\"tab-content\">\n                                    <h4>Allergen Assessment</h4>\n                                    <br />\n                                    Allergen Assessment will come here\n                                </div>\n                            </TabPanel>\n                            <TabPanel>\n                                <div className=\"tab-content\">\n                                    <h4>Packaging Materials Assessment</h4>\n                                    <Form formName={PACKAGING} />\n                                </div>\n                            </TabPanel>\n                            <TabPanel>\n                                <div className=\"tab-content\">\n                                    <h4>Process Flow Assessment</h4>\n                                    <br />\n                                    Process Flow Assessment will come here\n                                </div>\n                            </TabPanel>\n                            <TabPanel>\n                                <div className=\"tab-content\">\n                                    <h4>Finished Product Assessment</h4>\n                                    <Form formName={FINISHED_PRODUCT} />\n                                </div>\n                            </TabPanel>\n                        </Tabs>\n                    </TabPanel>\n                    <TabPanel>\n                        <div id=\"History\" className=\"tab-content\">\n                            <h3>Assessment History</h3>\n                            <br />\n                            <History />\n                        </div>\n                    </TabPanel>\n                </Tabs>\n            </div>\n        </div>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router';\n\nimport Tabs from '../containers/Tabs';\nimport { Accordion } from '../components';\n\nexport default withRouter(({ history, location, data }) => {\n    const [isHistory, setIsHistory] = useState(location.state ? location.state.isHistory : false)\n\n    useEffect(() => {\n        setIsHistory(location.state ? location.state.isHistory : false);\n    }, [location.state]);\n\n    return (\n        <div>\n            <Tabs isHistory={isHistory} />\n            {/* <Accordion /> */}\n        </div>\n    )\n});","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectRoot, Form } from 'react-formio';\n\nimport { getCreateForm, getFSHAList } from '../redux/actions/formioActions';\nimport { fetchSubmissionsData, CREATE_FSHA } from '../utils/formioUtils';\n\n\nexport default () => {\n    const dispatch = useDispatch();\n    const { form } = useSelector(state => selectRoot('form', selectRoot('createfsha', state)));\n\n    const submissionsData = useSelector(state => fetchSubmissionsData(state, CREATE_FSHA));\n    // const { submissions } = useSelector(state => fetchSubmissionsData(state, CREATE_FSHA));\n\n    useEffect(() => {\n        if (Object.keys(form).length === 0) {\n            dispatch(getCreateForm());\n\n            // dispatch(getFSHAList());\n        }\n    }, []);\n\n    return (<div>\n        <div>\n            <h2><b style={{ fontWeight: '600' }}>Create New FSHA</b></h2>\n        </div>\n        <br />\n        <Form form={form} />\n    </div>);\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { saveForm } from \"react-formio\";\nimport _ from 'lodash';\nimport XLSX from 'xlsx';\n// import { make_cols } from '../ExcelReader/MakeColumn'\n\nexport const make_cols = refstr => {\n    let o = [], C = XLSX.utils.decode_range(refstr).e.c + 1;\n    for (var i = 0; i < C; ++i) o[i] = { name: XLSX.utils.encode_col(i), key: i }\n    return o;\n};\n\nconst ExcelToForm = class extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isFormCreated: false,\n            file: {},\n            data: [],\n            cols: [],\n            text: \"eg\"\n        };\n        this.handleFile = this.handleFile.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        //this.buttonClick = this.buttonClick.bind(this);\n    }\n\n    formComponents = []\n\n    commonAttri = {\n        // allowCalculateOverride: false,\n        // allowMultipleMasks: false,\n        // attributes: {},\n        // autofocus: false,\n        // calculateServer: false,\n        // calculateValue: \"\",\n        // clearOnHide: true,\n        // conditional: { show: null, when: null, eq: \"\" },\n        // customClass: \"\",\n        // customDefaultValue: \"\",\n        // dbIndex: false,\n        // defaultValue: null,\n        // description: \"\",\n        // disabled: false,\n        // encrypted: false,\n        // errorLabel: \"\",\n        // hidden: false,\n        // hideLabel: false,\n        // input: true,\n        // showCharCount: false,\n        // showWordCount: false,\n        // validateOn: \"change\",\n        // placeholder: \"\",\n        // prefix: \"\",\n        // properties: {},\n        // protected: false,\n        // redrawOn: \"\",\n        // refreshOn: \"\",\n        // modalEdit: false,\n        // multiple: false,\n    };\n\n    textfield = {\n        //case: \"\",\n        //customConditional: \"\",\n        //inputFormat: \"plain\",\n        //inputMask: \"\",\n        //inputType: \"text\",\n        //logic: [],\n        //mask: false,\n        // overlay: {\n        //   height: \"\",\n        //   left: \"\",\n        //   page: \"\",\n        //   style: \"\",\n        //   top: \"\",\n        //   width: \"\",\n        // },\n        //persistent: true,\n        //spellcheck: true,\n        // suffix: \"\",\n        // tabindex: \"\",\n        //tableView: true,\n        // tags: [],\n        // tooltip: \"\",\n        type: \"textfield\",\n        // unique: false,\n        // widget: { type: \"input\" },\n        // validate: {\n        //   custom: \"\",\n        //   customMessage: \"\",\n        //   customPrivate: false,\n        //   json: \"\",\n        //   maxLength: \"\",\n        //   minLength: \"\",\n        //   pattern: \"\",\n        //   required: false,\n        //   strictDateValidation: false,\n        //   unique: false,\n        // },\n    };\n\n    numberField = {\n        // label: \"Number\",\n        // mask: false,\n        // spellcheck: true,\n        // tableView: false,\n        // delimiter: false,\n        // requireDecimal: false,\n        // inputFormat: \"plain\",\n        // key: \"number\",\n        type: \"number\",\n        // suffix: \"\",\n        // unique: false,\n        // persistent: true,\n        // labelPosition: \"top\",\n        // tooltip: \"\",\n        // tabindex: \"\",\n        // widget: {\n        //   type: \"input\"\n        // },\n        // validate: {\n        //   required: false,\n        //   custom: \"\",\n        //   customPrivate: false,\n        //   strictDateValidation: false,\n        //   multiple: false,\n        //   unique: false,\n        //   min: \"\",\n        //   max: \"\",\n        //   step: \"any\",\n        //   integer: \"\"\n        // },\n        // overlay: {\n        //   style: \"\",\n        //   left: \"\",\n        //   top: \"\",\n        //   width: \"\",\n        //   height: \"\"\n        // },\n        // id: \"esnywp\"\n    }\n\n    radioGroup = {\n        // label: \"Radio\",\n        // optionsLabelPosition: \"right\",\n        // inline: false,\n        // tableView: false,\n        // widget: null,\n        // values: [\n        //   {\n        //     label: \"Radio1\",\n        //     value: \"radio1\",\n        //     shortcut: \"D\"\n        //   },\n        //   {\n        //     label: \"Radio2\",\n        //     value: \"radio2\",\n        //     shortcut: \"C\"\n        //   },\n        //   {\n        //     label: \"Radio3\",\n        //     value: \"radio3\",\n        //     shortcut: \"G\"\n        //   }\n        // ],\n        // key: \"radio\",\n        type: \"radio\",\n        inline: true,\n        // suffix: \"\",\n        // unique: false,\n        // persistent: true,\n        // labelPosition: \"top\",\n        // tooltip: \"\",\n        // tabindex: \"\",\n        // validate: {\n        //   required: false,\n        //   custom: \"\",\n        //   customPrivate: false,\n        //   strictDateValidation: false,\n        //   multiple: false,\n        //   unique: false\n        // },\n        // overlay: {\n        //   style: \"\",\n        //   left: \"\",\n        //   top: \"\",\n        //   width: \"\",\n        //   height: \"\"\n        // },\n        // inputType: \"radio\",\n        // fieldSet: false,\n        // id: \"e4kxfi\"\n    }\n\n    button = {\n        // block: false,\n        // action: \"submit\",\n        // dataGridLabel: true,\n        // disableOnInvalid: true,\n        // leftIcon: \"\",\n        // widget: { type: \"input\" },\n        // overlay: {\n        //   style: \"\",\n        //   left: \"\",\n        //   top: \"\",\n        //   width: \"\",\n        //   height: \"\"\n        // },\n        // persistent: false,\n        // rightIcon: \"\",\n        // size: \"md\",\n        // suffix: \"\",\n        // tabindex: \"\",\n        // tableView: false,\n        // theme: \"primary\",\n        // tooltip: \"\",\n        type: \"button\",\n        // unique: false,\n        // validate: {\n        //   custom: \"\",\n        //   customPrivate: false,\n        //   multiple: false,\n        //   required: false,\n        //   strictDateValidation: false,\n        //   unique: false,\n        // }\n    };\n\n    checkbox = {\n        // label: \"Checkbox\",\n        // tableView: false,\n        // key: \"checkbox1\",\n        type: \"checkbox\",\n        inline: true,\n        // suffix: \"\",\n        // unique: false,\n        // persistent: true,\n        // labelPosition: \"right\",\n        // tooltip: \"\",\n        // tabindex: \"\",\n        // widget: null,\n        // validate: {\n        //   required: false,\n        //   custom: \"\",\n        //   customPrivate: false,\n        //   strictDateValidation: false,\n        //   multiple: false,\n        //   unique: false\n        // },\n        // overlay: {\n        //   style: \"\",\n        //   left: \"\",\n        //   top: \"\",\n        //   width: \"\",\n        //   height: \"\"\n        // },\n        // inputType: \"checkbox\",\n        // dataGridLabel: true,\n        // value: \"\",\n        // name: \"\",\n        // id: \"ervmyfc\"\n    };\n\n    select = {\n        // label: \"Select\",\n        // widget: \"choicesjs\",\n        // tableView: true,\n        // selectThreshold: 0.3,\n        // key: \"select\",\n        type: \"select\",\n        // indexeddb: {\n        //   filter: {}\n        // },\n        // suffix: \"\",\n        // unique: false,\n        // persistent: true,\n        // labelPosition: \"top\",\n        // tooltip: \"\",\n        // tabindex: \"\",\n        // validate: {\n        //   required: false,\n        //   custom: \"\",\n        //   customPrivate: false,\n        //   strictDateValidation: false,\n        //   multiple: false,\n        //   unique: false\n        // },\n        // overlay: {\n        //   style: \"\",\n        //   left: \"\",\n        //   top: \"\",\n        //   width: \"\",\n        //   height: \"\"\n        // },\n        // clearOnRefresh: false,\n        // limit: 100,\n        // dataSrc: \"values\",\n        // valueProperty: \"\",\n        // lazyLoad: true,\n        // filter: \"\",\n        // searchEnabled: true,\n        // searchField: \"\",\n        // minSearch: 0,\n        // readOnlyValue: false,\n        // authenticate: false,\n        // template: \"<span>{{ item.label }}</span>\",\n        // selectFields: \"\",\n        // searchThreshold: 0.3,\n        // uniqueOptions: false,\n        // fuseOptions: {\n        //   include: \"score\",\n        //   threshold: 0.3\n        // },\n        // customOptions: {},\n        // id: \"etk7cgo\"\n    }\n\n    textArea = {\n        // label: \"Text Area\",\n        // autoExpand: false,\n        // tableView: true,\n        // key: \"textArea\",\n        type: \"textarea\",\n        // suffix: \"\",\n        // unique: false,\n        // persistent: true,\n        // labelPosition: \"top\",\n        // tooltip: \"\",\n        // tabindex: \"\",\n        // widget: {\n        //   type: \"input\"\n        // },\n        // validate: {\n        //   required: false,\n        //   custom: \"\",\n        //   customPrivate: false,\n        //   strictDateValidation: false,\n        //   multiple: false,\n        //   unique: false,\n        //   minLength: \"\",\n        //   maxLength: \"\",\n        //   pattern: \"\",\n        //   minWords: \"\",\n        //   maxWords: \"\"\n        // },\n        // overlay: {\n        //   style: \"\",\n        //   left: \"\",\n        //   top: \"\",\n        //   width: \"\",\n        //   height: \"\"\n        // },\n        // mask: false,\n        // inputType: \"text\",\n        // inputFormat: \"html\",\n        // inputMask: \"\",\n        // spellcheck: true,\n        // rows: 3,\n        // wysiwyg: false,\n        // editor: \"\",\n        // fixedSize: true,\n        // id: \"eopacla\"\n    }\n\n    password = {\n        // label: \"Password\",\n        // tableView: false,\n        // key: \"password\",\n        type: \"password\",\n        //suffix: \"\",\n        // unique: false,\n        // persistent: true,\n        // labelPosition: \"top\",\n        // tooltip: \"\",\n        // tabindex: \"\",\n        // widget: {\n        //   type: \"input\"\n        // },\n        // validate: {\n        //   required: false,\n        //   custom: \"\",\n        //   customPrivate: false,\n        //   strictDateValidation: false,\n        //   multiple: false,\n        //   unique: false,\n        //   minLength: \"\",\n        //   maxLength: \"\",\n        //   pattern: \"\"\n        // },\n        // overlay: {\n        //   style: \"\",\n        //   left: \"\",\n        //   top: \"\",\n        //   width: \"\",\n        //   height: \"\"\n        // },\n        // mask: false,\n        // inputType: \"text\",\n        // inputFormat: \"plain\",\n        // inputMask: \"\",\n        // spellcheck: true,\n        // id: \"e2jvpp9\"\n    }\n\n    selectBoxes = {\n        // label: \"Password\",\n        // tableView: false,\n        // key: \"password\",\n        type: \"selectboxes\",\n        inline: true,\n        // suffix: \"\",\n        // unique: false,\n        // persistent: true,\n        // labelPosition: \"top\",\n        // tooltip: \"\",\n        // tabindex: \"\",\n        // widget: {\n        //   type: \"input\"\n        // },\n        // validate: {\n        //   required: false,\n        //   custom: \"\",\n        //   customPrivate: false,\n        //   strictDateValidation: false,\n        //   multiple: false,\n        //   unique: false,\n        //   minLength: \"\",\n        //   maxLength: \"\",\n        //   pattern: \"\"\n        // },\n        // overlay: {\n        //   style: \"\",\n        //   left: \"\",\n        //   top: \"\",\n        //   width: \"\",\n        //   height: \"\"\n        // },\n        // properties: {},\n        // mask: false,\n        // inputType: \"text\",\n        // inputFormat: \"plain\",\n        // inputMask: \"\",\n        // spellcheck: true,\n        // id: \"e2jvpp9\"\n    }\n\n    cb = () => {\n        this.setState({ isFormCreated: true });\n    };\n\n    textChanged = (e) => {\n        this.setState({ text: e.target.value });\n    };\n\n    //ExcelReader block----------------------------------------\n\n    handleChange(e) {\n        console.log(this.select)\n        const files = e.target.files;\n        if (files && files[0]) this.setState({ file: files[0] });\n    };\n\n    handleFile() {\n        this.setState({ isFormCreated: false });\n\n        /* Boilerplate to set up FileReader */\n        const reader = new FileReader();\n        const rABS = !!reader.readAsBinaryString;\n\n        reader.onload = (e) => {\n            /* Parse data */\n            const bstr = e.target.result;\n            const wb = XLSX.read(bstr, { type: rABS ? 'binary' : 'array', bookVBA: true });\n            /* Get first worksheet */\n            const wsname = wb.SheetNames[0];\n            const ws = wb.Sheets[wsname];\n            /* Convert array of arrays */\n            const data = XLSX.utils.sheet_to_json(ws);\n            /* Update state */\n            this.setState({ data: data, cols: make_cols(ws['!ref']) }, () => {\n\n                let components = []\n                console.log(\"Length: \", this.state.data.length)\n\n                this.state.data.forEach(element => {\n                    console.log(\"ForEach Begin \", element.name)\n                    console.log(element.name)\n                    // if (element.name === undefined || element.name === \"\") {\n                    //   console.log(\"Breaking loop\")\n                    //   return;\n                    // } //else {\n                    let uniqueID = Date.now()\n                    switch (element.type) {\n                        case \"TextField\":\n                            components.push({\n                                ...this.commonAttri,\n                                ...this.textfield,\n                                id: \"lbl\" + uniqueID,\n                                key: \"textField\" + uniqueID,\n                                label: element.name || \"textField\" + uniqueID,\n                                labelPosition: \"top\"\n                            })\n                            break\n                        case \"TextArea\":\n                            components.push({\n                                ...this.commonAttri,\n                                ...this.textArea,\n                                id: \"txtArea\" + uniqueID,\n                                key: \"textArea\" + uniqueID,\n                                label: element.name || \"textArea\" + uniqueID,\n                                labelPosition: \"top\"\n                            })\n                            break\n                        case \"Number\":\n                            components.push({\n                                ...this.commonAttri,\n                                ...this.numberField,\n                                id: \"lblNum\" + uniqueID,\n                                key: \"number\" + uniqueID,\n                                label: element.name || \"number\" + uniqueID,\n                                labelPosition: \"top\"\n                            })\n                            break\n                        case \"Password\":\n                            components.push({\n                                ...this.commonAttri,\n                                ...this.password,\n                                id: \"lblPwd\" + uniqueID,\n                                key: \"pwd\" + uniqueID,\n                                label: element.name || \"pwd\" + uniqueID,\n                                labelPosition: \"top\"\n                            })\n                            break\n                        case \"Checkbox\":\n                            components.push({\n                                ...this.commonAttri,\n                                ...this.checkbox,\n                                id: \"lblChk\" + uniqueID,\n                                key: \"chk\" + uniqueID,\n                                label: element.name || \"chk\" + uniqueID,\n                                labelPosition: \"top\",\n                                value: element.values\n                            })\n                            break\n                        case \"Button\":\n                            components.push({\n                                ...this.commonAttri,\n                                ...this.textfield,\n                                id: \"btn\" + uniqueID,\n                                key: \"btn\" + uniqueID,\n                                label: element.name || \"btn\" + uniqueID,\n                                labelPosition: \"top\"\n                            })\n                            break\n                        case \"Select\":\n                            let splitData = element.values.split(\"||\")\n                            let splitValues = []\n                            for (let k = 0; k < splitData.length; k++) {\n                                console.log(splitData[k])\n                                let Val = splitData[k].split(\"#\")\n                                splitValues.push({ label: Val[0], value: Val[1], shortcut: \"\" })\n                            }\n\n                            components.push({\n                                ...this.commonAttri,\n                                ...this.select,\n                                data: {\n                                    json: \"\",\n                                    url: \"\",\n                                    resource: \"\",\n                                    custom: \"\",\n                                    values: splitValues\n                                },\n                                id: \"Select\" + uniqueID,\n                                key: \"Select\" + uniqueID,\n                                label: element.name || \"Select\" + uniqueID,\n                                labelPosition: \"top\",\n                            })\n                            break\n\n                        case \"SelectBoxes\":\n                            let splitSelectBoxData = element.values.split(\"||\")\n                            let splitSelectBoxValues = []\n                            for (let k = 0; k < splitSelectBoxData.length; k++) {\n                                console.log(splitSelectBoxData[k])\n                                let Val = splitSelectBoxData[k].split(\"#\")\n                                splitSelectBoxValues.push({ label: Val[0], value: Val[1] })\n                            }\n\n                            components.push({\n                                ...this.commonAttri,\n                                ...this.selectBoxes,\n                                values: splitSelectBoxValues,\n                                id: \"SelectBox\" + uniqueID,\n                                key: \"SelectBox\" + uniqueID,\n                                label: element.name || \"SelectBox\" + uniqueID,\n                                labelPosition: \"top\",\n                            })\n                            break\n\n                        case \"Radio\":\n                            let splitRadioButtonsData = element.values.split(\"||\")\n                            let splitRadioButtonsValues = []\n                            for (let k = 0; k < splitRadioButtonsData.length; k++) {\n                                console.log(splitRadioButtonsData[k])\n                                let Val = splitRadioButtonsData[k].split(\"#\")\n                                splitRadioButtonsValues.push({ label: Val[0], value: Val[1], shortcut: \"\" })\n                            }\n\n                            components.push({\n                                ...this.commonAttri,\n                                ...this.radioGroup,\n                                values: splitRadioButtonsValues,\n                                id: \"radio\" + uniqueID,\n                                key: \"radioButtons\" + uniqueID,\n                                label: element.name || \"radioButtons\" + uniqueID,\n                                labelPosition: \"top\",\n                            })\n                            break\n\n                    }\n                    //}\n                });\n\n                components.push({\n                    ...this.commonAttri,\n                    ...this.button,\n                    id: \"btnSubmit\",\n                    key: \"submit\",\n                    label: \"Submit\",\n                    labelPosition: \"top\"\n                })\n\n                console.trace(components);\n                this.formComponents = components\n            });\n\n        };\n\n        if (rABS) {\n            reader.readAsBinaryString(this.state.file);\n        } else {\n            reader.readAsArrayBuffer(this.state.file);\n        };\n\n        // this.handleFile();\n\n        // const form = {\n        //   display: 'form',\n        //   components: this.formComponents,\n        //   title: this.state.text,\n        //   name: _.camelCase(this.state.text),\n        //   path: (_.camelCase(this.state.text)).toLowerCase(),\n        // };\n\n        // this.props.saveForm(form, this.cb);\n    }\n\n    buttonClick = () => {\n        this.setState({ isFormCreated: false });\n\n        const form = {\n            display: 'form',\n            components: this.formComponents,\n            title: this.state.text,\n            name: _.camelCase(this.state.text),\n            path: (_.camelCase(this.state.text)).toLowerCase(),\n        };\n\n        this.props.saveForm(form, this.cb);\n    };\n\n    createForm() {\n        this.handleFile();\n        this.buttonClick();\n    }\n\n    //---------------------------------------------------------\n    render() {\n        //console.log(this.select.data)\n        return (\n            <div>\n                <div>\n                    <label htmlFor=\"file\">Upload an excel to Process Triggers</label>\n                    <br />\n                    <input type=\"file\" className=\"form-control\" id=\"file\" onChange={this.handleChange} />\n                    <br />\n                    <input type='submit'\n                        value=\"Process Triggers\"\n                        onClick={this.handleFile} />\n                </div>\n\n\n                {this.state.isFormCreated && <div> Form Created successfully... <br /><br /></div>}\n\n                <h3> Forms </h3>\n\n                <input type=\"text\" onChange={this.textChanged} />\n                <button onClick={this.buttonClick}> Create form </button>\n\n                <br /><br />\n\n            </div>\n        );\n    }\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        saveForm: (form, cb) => {\n            debugger;\n            const newForm = {\n                ...form,\n                tags: ['common', 'dynamicForm'],\n            };\n\n            dispatch(saveForm('form', newForm, (err, form) => {\n                if (!err) {\n                    debugger;\n                    //   dispatch(push(`/form/${form._id}`))\n                }\n                debugger;\n                console.trace(form);\n            }));\n\n            if (cb)\n                cb();\n        },\n    }\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(ExcelToForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, setUser } from 'react-formio';\nimport { push } from 'connected-react-router';\n\nconst Login = class extends Component {\n    render() {\n        return (\n            <Form src={'https://bczrqfsivlgdiqk.form.io/user/login'}\n                onSubmit={(submission) => { debugger; }}\n                onSubmitDone={this.props.onSubmitDone}\n            />\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        onSubmitDone: (submission) => {\n            // debugger;\n            dispatch(setUser(submission));\n            dispatch(push('/'));\n        }\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Login)\n","import React, { useEffect, useState } from 'react';\nimport { Route, withRouter, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { selectRoot } from 'react-formio';\n\nimport Header from './containers/Header';\nimport Navigation from './containers/Navigation';\nimport { Home, Details, Create, Login, ExcelToForm } from './pages';\n\nimport './App.css';\n\nfunction App(props) {\n  useEffect(() => {\n    // fetch the FSHA submissions... \n\n  }, []);\n\n  const [flag, toggleFlag] = useState(true)\n\n  const clickHandler = () => {\n    toggleFlag(!flag);\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Navigation onClickToggle={clickHandler} />\n\n      <div style={{ margin: '1rem 2rem 0' }}>\n        <Switch>\n          <Route exact path=\"/\"\n            render={() => {\n              if (!props.auth.authenticated)\n                return <Login />;\n              else\n                return <Home />;\n            }}\n          />\n          <Route path=\"/details\" component={Details} />\n          <Route path=\"/create\" component={Create} />\n          {/* <Route path=\"/exceltoform\" component={ExcelToForm} /> */}\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: selectRoot('auth', state),\n  };\n};\n\nexport default withRouter(connect(\n  mapStateToProps,\n  null\n)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport store, { history } from './store';\nimport { initAuth, Formio, Components } from 'react-formio';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap';\n\nimport { AppConfig } from './config';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './styles.scss';\n\nFormio.setProjectUrl(AppConfig.projectUrl);\nFormio.setBaseUrl(AppConfig.apiUrl);\n\n// Components.setComponents(components);\n\n// Initialize the current user\nstore.dispatch(initAuth());\n\nrender(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/pepsico-logo.b88b0eff.png\";"],"sourceRoot":""}